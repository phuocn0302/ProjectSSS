[gd_scene load_steps=58 format=3 uid="uid://ckjlvrurfq6x2"]

[ext_resource type="Script" uid="uid://dkmgrknipaokq" path="res://src/entities/bosses/godot/GodotBoss.kt" id="1_m4p5g"]
[ext_resource type="Texture2D" uid="uid://dnf8hqs1b4rrd" path="res://assets/texture/npc/bosses/boss_godot/base_sheet.png" id="2_52t2c"]
[ext_resource type="Texture2D" uid="uid://clq7vtr5sg8yu" path="res://assets/texture/sfx/3x_white_particle.png" id="3_52t2c"]
[ext_resource type="Script" uid="uid://b875f1tfsn74d" path="res://gdj/entities/bosses/BossData.gdj" id="3_vni31"]
[ext_resource type="Script" uid="uid://bvby18eo8k1pe" path="res://gdj/commons/components/ComponentContainer.gdj" id="6_7mrnl"]
[ext_resource type="PackedScene" uid="uid://dptehxrxtfpx3" path="res://src/entities/bosses/godot/godot_arm.tscn" id="8_ncdkc"]
[ext_resource type="Script" uid="uid://d0gf87hveesrj" path="res://gdj/commons/components/etc/HurtboxComponent.gdj" id="8_vni31"]
[ext_resource type="Script" uid="uid://k4bvu3ajrnp" path="res://gdj/commons/components/etc/HitboxComponent.gdj" id="9_w3lhe"]
[ext_resource type="Script" uid="uid://dka2on5w1r0ov" path="res://gdj/commons/components/etc/HealthComponent.gdj" id="10_3bm5r"]
[ext_resource type="Script" uid="uid://bdwpmg6b140ck" path="res://gdj/commons/components/sfx/HitFlashComponent.gdj" id="11_h1wsb"]
[ext_resource type="Script" uid="uid://bd7jktcpbcp5e" path="res://gdj/commons/components/movements/IdleMoveComponent.gdj" id="12_8r58b"]
[ext_resource type="Script" uid="uid://bytw8l4aye7xe" path="res://src/entities/projectiles/ProjectileSpawner.kt" id="13_ayqat"]
[ext_resource type="Script" uid="uid://u6r4u4ekrgs2" path="res://src/commons/state_machine/StateMachine.kt" id="13_fg3tp"]
[ext_resource type="Script" uid="uid://e4nygxphqmag" path="res://gdj/commons/components/sfx/GhostTrailingComponent.gdj" id="13_ilov8"]
[ext_resource type="Script" uid="uid://4xgu1637uok5" path="res://src/entities/bosses/godot/states/ShootAtPlayer.kt" id="14_0vgfa"]
[ext_resource type="Script" uid="uid://7krj0ewwsxjv" path="res://gdj/commons/components/sfx/ScreenShakeComponent.gdj" id="14_7mrnl"]
[ext_resource type="Script" uid="uid://cs3muaisgjrme" path="res://gdj/entities/projectiles/spawners/ProjectileSpawnerContainer.gdj" id="14_vni31"]
[ext_resource type="Script" uid="uid://djtx5g7eebda4" path="res://gdj/entities/projectiles/spawners/CircleProjectileSpawnerData.gdj" id="15_vni31"]
[ext_resource type="Script" uid="uid://dbbwa0mc5o0p6" path="res://src/entities/bosses/godot/states/PunchAttack.kt" id="16_s0t23"]
[ext_resource type="Resource" uid="uid://dbcbjk26q4sa8" path="res://src/entities/projectiles/resources/enemies/circle.tres" id="17_3bm5r"]
[ext_resource type="Script" uid="uid://dgp2hqvqr2vps" path="res://src/entities/bosses/godot/states/DoublePunchAttack.kt" id="17_030pk"]
[ext_resource type="Script" uid="uid://cnks6m2x54kaw" path="res://gdj/entities/projectiles/spawners/TargetProjectileSpawnerData.gdj" id="17_w3lhe"]
[ext_resource type="Script" uid="uid://c3xy2vys6xpv8" path="res://src/entities/bosses/BossPhaseManager.kt" id="18_44c5p"]
[ext_resource type="Script" uid="uid://dtceh6oeh88r6" path="res://gdj/entities/projectiles/spawners/PatternProjectileSpawnerData.gdj" id="19_3bm5r"]
[ext_resource type="Resource" uid="uid://c8knnblqgk4x0" path="res://src/entities/projectiles/resources/enemies/bullet.tres" id="19_h1wsb"]
[ext_resource type="Script" uid="uid://birnw4ld6bjh6" path="res://src/entities/bosses/godot/states/Phase2Transition.kt" id="19_irf51"]
[ext_resource type="Script" uid="uid://c1fmcs4d55m2h" path="res://src/entities/enemies/common_states/EnemyEntranceState.kt" id="19_jfwlp"]
[ext_resource type="Script" uid="uid://ct6lgw14mgxnw" path="res://src/entities/bosses/godot/states/ShootAtPlayer2.kt" id="19_xss0f"]
[ext_resource type="Resource" uid="uid://g87vwu1wy0vw" path="res://src/entities/projectiles/resources/enemies/diamond.tres" id="21_3bm5r"]
[ext_resource type="Script" uid="uid://dbb553efnt0bi" path="res://gdj/entities/bosses/BossPhaseData.gdj" id="21_w3lhe"]
[ext_resource type="Script" uid="uid://cbxjhglhflsyl" path="res://src/entities/enemies/common_states/EnemyIdleState.kt" id="22_44c5p"]
[ext_resource type="Resource" uid="uid://ccj7bkmidopfa" path="res://src/entities/bosses/godot/phase_datas/phase_1.tres" id="24_ilov8"]
[ext_resource type="Resource" uid="uid://dybi4iibdpxn" path="res://src/entities/bosses/godot/phase_datas/phase_2.tres" id="25_7mrnl"]
[ext_resource type="Resource" uid="uid://xvufx8fawf1f" path="res://src/entities/bosses/godot/phase_datas/phase_3.tres" id="26_etwsd"]
[ext_resource type="Script" uid="uid://3rmgpmcl4do2" path="res://gdj/entities/bosses/godot/states/GodotBossDieState.gdj" id="35_7mrnl"]

[sub_resource type="Resource" id="Resource_7mrnl"]
script = ExtResource("3_vni31")
max_health = 20.0
metadata/_custom_type_script = "uid://b875f1tfsn74d"

[sub_resource type="Shader" id="Shader_irf51"]
code = "shader_type canvas_item;

// === Outline Controls ===
uniform bool outline_enabled = false;
uniform vec4 outline_color    : source_color = vec4(1.0);
uniform float outline_size    : hint_range(0.0, 16.0, 0.1) = 1.0;
uniform float alpha_threshold : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform int outline_samples   : hint_range(4, 8) = 4;

// === Flash Controls ===
uniform vec4 flash_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float flash_strength : hint_range(0.0, 1.0, 0.1) = 0.0;

// === Outline Sampling Directions ===
const vec2[8] DIRS = vec2[8](
	vec2(1.0, 0.0), vec2(0.0, 1.0),  vec2(-1.0, 0.0),  vec2(0.0, -1.0),
	vec2(1.0, 1.0), vec2(-1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0)
);

void fragment() {
	vec4 tex = texture(TEXTURE, UV);
	float alpha = tex.a;

	if (alpha <= 0.0 && outline_size <= 0.0) discard;

	bool solid = alpha > alpha_threshold;
	bool found_outline = false;

	// Only check outline if enabled and current pixel is transparent
	if (outline_enabled && !solid && outline_size > 0.0) {
		vec2 offset = TEXTURE_PIXEL_SIZE * outline_size;
		for (int i = 0; i < outline_samples; i++) {
			if (texture(TEXTURE, UV + DIRS[i] * offset).a > alpha_threshold) {
				found_outline = true;
				break;
			}
		}
	}

	// Color decision
	if (solid) {
		COLOR = tex;
	} else if (outline_enabled && found_outline) {
		COLOR = outline_color;
	} else {
		discard;
	}

	// === Flash Effect ===
	COLOR.rgb = mix(COLOR.rgb, flash_color.rgb, flash_strength);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_c2l74"]
shader = SubResource("Shader_irf51")
shader_parameter/outline_enabled = true
shader_parameter/outline_color = Color(1, 0, 0, 1)
shader_parameter/outline_size = 1.0
shader_parameter/alpha_threshold = 0.0
shader_parameter/outline_samples = 4
shader_parameter/flash_color = Color(1, 1, 1, 1)
shader_parameter/flash_strength = 0.0

[sub_resource type="AtlasTexture" id="AtlasTexture_lvhoc"]
atlas = ExtResource("2_52t2c")
region = Rect2(0, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_q4ssp"]
atlas = ExtResource("2_52t2c")
region = Rect2(48, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_irf51"]
atlas = ExtResource("2_52t2c")
region = Rect2(96, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_c2l74"]
atlas = ExtResource("2_52t2c")
region = Rect2(144, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_lxydi"]
atlas = ExtResource("2_52t2c")
region = Rect2(192, 0, 48, 48)

[sub_resource type="SpriteFrames" id="SpriteFrames_uxonu"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lvhoc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_q4ssp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_irf51")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c2l74")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lxydi")
}],
"loop": true,
"name": &"default",
"speed": 10.0
}]

[sub_resource type="Curve" id="Curve_lvhoc"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.919831, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_q4ssp"]
curve = SubResource("Curve_lvhoc")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_irf51"]
lifetime_randomness = 0.4
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(1, 1, 1)
direction = Vector3(0, -1, 0)
spread = 20.0
initial_velocity_min = 50.0
initial_velocity_max = 70.0
gravity = Vector3(0, 0, 0)
scale_min = 2.0
scale_max = 2.0
scale_curve = SubResource("CurveTexture_q4ssp")

[sub_resource type="Shader" id="Shader_lxydi"]
code = "shader_type canvas_item;

// === Outline Controls ===
uniform bool outline_enabled = false;
uniform vec4 outline_color    : source_color = vec4(1.0);
uniform float outline_size    : hint_range(0.0, 16.0, 0.1) = 1.0;
uniform float alpha_threshold : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform int outline_samples   : hint_range(4, 8) = 4;

// === Flash Controls ===
uniform vec4 flash_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float flash_strength : hint_range(0.0, 1.0, 0.1) = 0.0;

// === Outline Sampling Directions ===
const vec2[8] DIRS = vec2[8](
	vec2(1.0, 0.0), vec2(0.0, 1.0),  vec2(-1.0, 0.0),  vec2(0.0, -1.0),
	vec2(1.0, 1.0), vec2(-1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0)
);

void fragment() {
	vec4 tex = texture(TEXTURE, UV);
	float alpha = tex.a;

	if (alpha <= 0.0 && outline_size <= 0.0) discard;

	bool solid = alpha > alpha_threshold;
	bool found_outline = false;

	// Only check outline if enabled and current pixel is transparent
	if (outline_enabled && !solid && outline_size > 0.0) {
		vec2 offset = TEXTURE_PIXEL_SIZE * outline_size;
		for (int i = 0; i < outline_samples; i++) {
			if (texture(TEXTURE, UV + DIRS[i] * offset).a > alpha_threshold) {
				found_outline = true;
				break;
			}
		}
	}

	// Color decision
	if (solid) {
		COLOR = tex;
	} else if (outline_enabled && found_outline) {
		COLOR = outline_color;
	} else {
		discard;
	}

	// === Flash Effect ===
	COLOR.rgb = mix(COLOR.rgb, flash_color.rgb, flash_strength);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_uxonu"]
shader = SubResource("Shader_lxydi")
shader_parameter/outline_enabled = true
shader_parameter/outline_color = Color(1, 0, 0, 1)
shader_parameter/outline_size = 1.0
shader_parameter/alpha_threshold = 0.0
shader_parameter/outline_samples = 4
shader_parameter/flash_color = Color(1, 1, 1, 1)
shader_parameter/flash_strength = 0.0

[sub_resource type="Shader" id="Shader_c2l74"]
code = "shader_type canvas_item;

// === Outline Controls ===
uniform bool outline_enabled = false;
uniform vec4 outline_color    : source_color = vec4(1.0);
uniform float outline_size    : hint_range(0.0, 16.0, 0.1) = 1.0;
uniform float alpha_threshold : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform int outline_samples   : hint_range(4, 8) = 4;

// === Flash Controls ===
uniform vec4 flash_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float flash_strength : hint_range(0.0, 1.0, 0.1) = 0.0;

// === Outline Sampling Directions ===
const vec2[8] DIRS = vec2[8](
	vec2(1.0, 0.0), vec2(0.0, 1.0),  vec2(-1.0, 0.0),  vec2(0.0, -1.0),
	vec2(1.0, 1.0), vec2(-1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0)
);

void fragment() {
	vec4 tex = texture(TEXTURE, UV);
	float alpha = tex.a;

	if (alpha <= 0.0 && outline_size <= 0.0) discard;

	bool solid = alpha > alpha_threshold;
	bool found_outline = false;

	// Only check outline if enabled and current pixel is transparent
	if (outline_enabled && !solid && outline_size > 0.0) {
		vec2 offset = TEXTURE_PIXEL_SIZE * outline_size;
		for (int i = 0; i < outline_samples; i++) {
			if (texture(TEXTURE, UV + DIRS[i] * offset).a > alpha_threshold) {
				found_outline = true;
				break;
			}
		}
	}

	// Color decision
	if (solid) {
		COLOR = tex;
	} else if (outline_enabled && found_outline) {
		COLOR = outline_color;
	} else {
		discard;
	}

	// === Flash Effect ===
	COLOR.rgb = mix(COLOR.rgb, flash_color.rgb, flash_strength);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lxydi"]
shader = SubResource("Shader_c2l74")
shader_parameter/outline_enabled = true
shader_parameter/outline_color = Color(1, 0, 0, 1)
shader_parameter/outline_size = 1.0
shader_parameter/alpha_threshold = 0.0
shader_parameter/outline_samples = 4
shader_parameter/flash_color = Color(1, 1, 1, 1)
shader_parameter/flash_strength = 0.0

[sub_resource type="CircleShape2D" id="CircleShape2D_bemkk"]
radius = 25.0

[sub_resource type="CircleShape2D" id="CircleShape2D_akxlh"]
radius = 22.0227

[sub_resource type="Resource" id="Resource_h1wsb"]
script = ExtResource("15_vni31")
number_of_projectiles = 10
rotate_pattern = true
rotate_speed = 20.0
spawn_direction = Vector2(0, -1)
spawn_interval = 1.0
metadata/_custom_type_script = "uid://djtx5g7eebda4"

[sub_resource type="Resource" id="Resource_8r58b"]
script = ExtResource("17_w3lhe")
target_group = "player"
spawn_direction = Vector2(0, -1)
spawn_interval = 0.5
metadata/_custom_type_script = "uid://cnks6m2x54kaw"

[sub_resource type="Resource" id="Resource_ilov8"]
script = ExtResource("19_3bm5r")
number_of_projectile = 30
travel_time = 0.5
pattern_node_path = NodePath("Path2D")
spawn_direction = Vector2(0, -1)
spawn_interval = 2.0
metadata/_custom_type_script = "uid://dtceh6oeh88r6"

[sub_resource type="Curve2D" id="Curve2D_ayqat"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 0, -48, 0, 0, 0, 0, -8, -48, 0, 0, 0, 0, -16, -56, 0, 0, 0, 0, -16, -72, 0, 0, 0, 0, -24, -80, 0, 0, 0, 0, -16, -88, 0, 0, 0, 0, -8, -80, 0, 0, 0, 0, -8, -88, 0, 0, 0, 0, 0, -88, 0, 0, 0, 0, 4, -80, 0, 0, 0, 0, 8, -88, 0, 0, 0, 0, 16, -88, 0, 0, 0, 0, 16, -80, 0, 0, 0, 0, 24, -88, 0, 0, 0, 0, 32, -80, 0, 0, 0, 0, 24, -72, 0, 0, 0, 0, 24, -56, 0, 0, 0, 0, 16, -48, 0, 0, 0, 0, 0, -48)
}
point_count = 19

[node name="GodotBoss" type="Node2D"]
script = ExtResource("1_m4p5g")
boss_data = SubResource("Resource_7mrnl")
metadata/_custom_type_script = "uid://ctt3brlmw3a0w"

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_c2l74")
sprite_frames = SubResource("SpriteFrames_uxonu")
autoplay = "default"
frame_progress = 0.977381

[node name="EyeParticles" type="GPUParticles2D" parent="."]
unique_name_in_owner = true
modulate = Color(1, 0, 0, 1)
position = Vector2(-10, 1)
emitting = false
amount = 12
texture = ExtResource("3_52t2c")
process_material = SubResource("ParticleProcessMaterial_irf51")

[node name="Arms" type="Node2D" parent="."]

[node name="RightArmPos" type="Marker2D" parent="Arms"]
unique_name_in_owner = true
position = Vector2(49, 24)

[node name="LeftArmPos" type="Marker2D" parent="Arms"]
unique_name_in_owner = true
position = Vector2(-49, 24)

[node name="RightArm" parent="Arms" node_paths=PackedStringArray("active_position", "godot_boss") instance=ExtResource("8_ncdkc")]
unique_name_in_owner = true
position = Vector2(49, 24)
active_position = NodePath("../RightArmPos")
godot_boss = NodePath("../..")

[node name="Sprite2D" parent="Arms/RightArm" index="0"]
material = SubResource("ShaderMaterial_uxonu")

[node name="IdleMoveComponent" parent="Arms/RightArm" index="3"]
direction = Vector2(-1, 0)

[node name="LeftArm" parent="Arms" node_paths=PackedStringArray("active_position", "godot_boss") instance=ExtResource("8_ncdkc")]
unique_name_in_owner = true
position = Vector2(-49, 24)
active_position = NodePath("../LeftArmPos")
godot_boss = NodePath("../..")

[node name="Sprite2D" parent="Arms/LeftArm" index="0"]
material = SubResource("ShaderMaterial_lxydi")
scale = Vector2(1, -1)

[node name="Components" type="Node2D" parent="."]
script = ExtResource("6_7mrnl")
metadata/_custom_type_script = "uid://bvby18eo8k1pe"

[node name="HurtboxComponent" type="Area2D" parent="Components" node_paths=PackedStringArray("health_component")]
unique_name_in_owner = true
collision_layer = 16
collision_mask = 0
script = ExtResource("8_vni31")
health_component = NodePath("../HealthComponent")
metadata/_custom_type_script = "uid://d0gf87hveesrj"

[node name="CollisionShape2D" type="CollisionShape2D" parent="Components/HurtboxComponent"]
shape = SubResource("CircleShape2D_bemkk")

[node name="HitboxComponent" type="Area2D" parent="Components"]
unique_name_in_owner = true
collision_layer = 0
script = ExtResource("9_w3lhe")
metadata/_custom_type_script = "uid://k4bvu3ajrnp"

[node name="CollisionShape2D" type="CollisionShape2D" parent="Components/HitboxComponent"]
shape = SubResource("CircleShape2D_akxlh")

[node name="HealthComponent" type="Node" parent="Components" node_paths=PackedStringArray("entity")]
unique_name_in_owner = true
script = ExtResource("10_3bm5r")
max_health = 400.0
queue_free_on_die = false
entity = NodePath("../..")
metadata/_custom_type_script = "uid://dka2on5w1r0ov"

[node name="HitFlashComponent" type="Node" parent="Components" node_paths=PackedStringArray("sprite", "health_component", "entity")]
unique_name_in_owner = true
script = ExtResource("11_h1wsb")
sprite = NodePath("../../AnimatedSprite2D")
health_component = NodePath("../HealthComponent")
entity = NodePath("../..")
metadata/_custom_type_script = "uid://bdwpmg6b140ck"

[node name="IdleMoveComponent" type="Node" parent="Components" node_paths=PackedStringArray("entity")]
unique_name_in_owner = true
script = ExtResource("12_8r58b")
move_type = 1
angular_speed = 4.0
circle_radius = 3.0
figure8_amplitude = 8.0
entity = NodePath("../..")
active = false
metadata/_custom_type_script = "uid://bd7jktcpbcp5e"

[node name="GhostTrailingComponent" type="Node" parent="Components" node_paths=PackedStringArray("anim_sprite", "entity")]
unique_name_in_owner = true
script = ExtResource("13_ilov8")
anim_sprite = NodePath("../../AnimatedSprite2D")
entity = NodePath("../..")
metadata/_custom_type_script = "uid://e4nygxphqmag"

[node name="ScreenShakeComponent" type="Node" parent="Components" node_paths=PackedStringArray("entity")]
unique_name_in_owner = true
script = ExtResource("14_7mrnl")
entity = NodePath("../..")
metadata/_custom_type_script = "uid://7krj0ewwsxjv"

[node name="Spawner" type="Node2D" parent="."]
script = ExtResource("14_vni31")
metadata/_custom_type_script = "uid://cs3muaisgjrme"

[node name="CircleProjectileSpawner" type="Node2D" parent="Spawner"]
unique_name_in_owner = true
script = ExtResource("13_ayqat")
spawner_data = SubResource("Resource_h1wsb")
projectile_data = ExtResource("17_3bm5r")
active = false

[node name="TargetProjectileSpawner" type="Node2D" parent="Spawner"]
unique_name_in_owner = true
script = ExtResource("13_ayqat")
spawner_data = SubResource("Resource_8r58b")
projectile_data = ExtResource("19_h1wsb")
active = false

[node name="PatternProjectileSpawner" type="Node2D" parent="Spawner"]
unique_name_in_owner = true
script = ExtResource("13_ayqat")
spawner_data = SubResource("Resource_ilov8")
projectile_data = ExtResource("21_3bm5r")
active = false

[node name="Path2D" type="Path2D" parent="Spawner/PatternProjectileSpawner"]
visible = false
position = Vector2(-4, 75)
curve = SubResource("Curve2D_ayqat")

[node name="BossPhaseManager" type="Node" parent="." node_paths=PackedStringArray("health_component", "state_machine")]
unique_name_in_owner = true
script = ExtResource("18_44c5p")
health_component = NodePath("../Components/HealthComponent")
state_machine = NodePath("../StateMachine")
phase_data = Array[ExtResource("21_w3lhe")]([ExtResource("24_ilov8"), ExtResource("25_7mrnl"), ExtResource("26_etwsd")])

[node name="StateMachine" type="Node" parent="." node_paths=PackedStringArray("actor", "starting_state")]
unique_name_in_owner = true
script = ExtResource("13_fg3tp")
actor = NodePath("..")
starting_state = NodePath("EnemyEntranceState")

[node name="EnemyEntranceState" type="Node" parent="StateMachine" node_paths=PackedStringArray("hurtbox_component", "next_state")]
script = ExtResource("19_jfwlp")
hurtbox_component = NodePath("../../Components/HurtboxComponent")
next_state = NodePath("../Idle")
metadata/_custom_type_script = "uid://wri53xsob36t"

[node name="Idle" type="Node" parent="StateMachine"]
script = ExtResource("22_44c5p")

[node name="Phase2Transition" type="Node" parent="StateMachine" node_paths=PackedStringArray("next_state")]
script = ExtResource("19_irf51")
next_state = NodePath("../PunchAttack")

[node name="ShootAtPlayer1" type="Node" parent="StateMachine"]
script = ExtResource("14_0vgfa")

[node name="ShootAtPlayer2" type="Node" parent="StateMachine"]
script = ExtResource("19_xss0f")

[node name="PunchAttack" type="Node" parent="StateMachine"]
script = ExtResource("16_s0t23")

[node name="DoublePunchAttack" type="Node" parent="StateMachine"]
script = ExtResource("17_030pk")

[node name="Die" type="Node" parent="StateMachine" node_paths=PackedStringArray("component_container", "projectile_spawner_container")]
unique_name_in_owner = true
script = ExtResource("35_7mrnl")
component_container = NodePath("../../Components")
projectile_spawner_container = NodePath("../../Spawner")
metadata/_custom_type_script = "uid://3rmgpmcl4do2"

[editable path="Arms/RightArm"]
[editable path="Arms/LeftArm"]
